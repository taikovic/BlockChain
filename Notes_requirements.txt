 Definitions: 

1) fonctions de hachage:
-------------------------

sha256: groupe les inputs d'une certaine taille, les compresse pour donner un output avec une taille 128-512 bits;
caracteristique: 
- Compression d'output.
- resistance aux collisions: Injectivite de la fonction: f(x)=f(y) => x=y; et bijectivite meme;
- pre-image resistant: impossible de trouver la valeur input a partir de la valeur de sortie (f -1: la fct inverse est difficile a trouver)
(seulement la force brut: essayer tte les valeurs d'input, # en contradiction avec proof-of-work;
*) Algo de Hachage: 
    1 step: 2 X DataBlock + mathematical hash function => Hash value; 
    2 step: Hash value (un des deux blocs) & Data block pour la sequence suivante; 
*) Algo example: SHA-256:used by ASIC (by mining pool), but cf. 51% Attackl (Application Specific Integrated Circuits)
                    X11: used in DASHCOIN, more secure than SHA-256, no ASIC usage; organise 11 chaine d'algos de hashage differents
                        no usage of ASIC as they are specific to only 1! hash function; 
 *) Mntnt voir le systeme de consensus: la validite et l'ordre des trx:
 Pow, PoS, DPoS, Byzantine fault tolerant systems, Tangle
 2) Proof-of-Work: POW
 ----------------------
 *) permet aux mineurs de dire au reste du reseau: 
    " regardez, j'ai utilise bcp de capacites de calculs, plein de materiels et plein d'energie au service du reseau, la preuve
    j'ai obtenu le resultat de la 'preuve du travail' donc mntnt je peux ajouter le bloc recuperer la recompense qui va 
    va payer pour tous ces frais."
 *) pb de consommation d'energie(comme le pays d'Irlande): juste pour dire qui doit ajouter le bloc et gagner.
    Solution: Proof-of-Stake || Delegated-Proof-of-Stake: preuve de l'enjeu: 
 
 
 3) proof of stake:Preuve de l'enjeu:
 ------------------------------------
 *) demontrer qu'on possede un certain nombre d'argent ou de jetons ds le reseau;
 le minteur: combine l'identifiant de dernier bloc ajoute a la chain + avec sa Public Key => numero aleatoire 
            multiplie de numero aleatoire x nombre de jetons acquis x nombre de secondes depuis le dernier bloc ajoutee a la chaine = value
            si value > limit => le minteur est autorise a creer le bloc. 
            
 *) un pb se pose: la valeur des coins valides avec PoS, n'est pas implicite ou ne vaut rien (Nothing at Stake)  rien a perdre
    le pb de fork aussi se pose et on peut aller avec les deux branches (car ca ne coute rien, meme avec groupe).
  
 
                    
